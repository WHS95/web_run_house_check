# 크루 인증 시스템 구현 프로세스

## 개요
이 문서는 크루 인증 코드를 사용하여 회원가입 시 크루 소속을 확인하는 시스템 구현 프로세스를 설명합니다. 
이 시스템을 통해 크루에 소속된 회원만 서비스를 이용할 수 있도록 합니다.

## 1. 데이터베이스 설정

### 1.1 테이블 생성 및 수정
- [x] 크루 초대 코드 테이블 (crew_invite_codes) 생성
- [x] 사용자 테이블 (users)에 크루 인증 관련 필드 추가
- [x] 초대 코드 사용 로그 테이블 (invite_code_usage_logs) 생성
- [x] 필요한 트리거 생성

## 2. 백엔드 구현

### 2.1 크루 초대 코드 관리 API 구현
- [ ] 초대 코드 생성 API (크루 관리자/어드민 전용)
  - 7자리 영문 대소문자 랜덤 코드 생성 로직 구현
  - 코드 유효성(만료일, 최대 사용 횟수 등) 설정 옵션 제공
- [ ] 초대 코드 조회 API (크루 관리자/어드민 전용)
- [ ] 초대 코드 비활성화/삭제 API (크루 관리자/어드민 전용)

### 2.2 사용자 인증 시스템 수정
- [ ] 기존 카카오 로그인 프로세스에 크루 인증 단계 추가
- [ ] 로그인 시 크루 인증 여부 확인 로직 구현
- [ ] 미인증 사용자 처리 로직 구현

### 2.3 초대 코드 검증 API 구현
- [ ] 초대 코드 유효성 검증 로직 구현 (코드 존재 여부, 활성 상태, 만료 여부, 사용 가능 횟수 등)
- [ ] 유효한 코드 사용 시 사용자-크루 매핑 및 인증 상태 업데이트
- [ ] 코드 사용 로그 기록 기능 구현

## 3. 프론트엔드 구현

### 3.1 카카오 로그인 후 크루 인증 플로우 구현
- [ ] 카카오 로그인 성공 후 크루 인증 여부 확인
- [ ] 미인증 사용자의 경우 크루 코드 입력 화면으로 리다이렉트

### 3.2 크루 코드 입력 화면 구현
- [ ] 7자리 크루 코드 입력 UI 구현
- [ ] 코드 유효성 검증 및 피드백 UI 구현
- [ ] 성공/실패 메시지 및 후속 액션 구현

### 3.3 미인증 사용자 접근 제한 구현
- [ ] 미인증 사용자의 제한된 페이지 접근 시 인증 요청 화면으로 리다이렉트
- [ ] 전역 인증 상태 관리 로직 구현

### 3.4 관리자 페이지 - 초대 코드 관리 UI 구현
- [ ] 크루 관리자를 위한 초대 코드 생성/관리 UI 구현
- [ ] 코드 사용 현황 및 통계 대시보드 구현

## 4. 테스트 및 배포

### 4.1 테스트
- [ ] 각 API 엔드포인트 단위 테스트 구현
- [ ] 인증 플로우 통합 테스트 구현
- [ ] 다양한 시나리오(유효/만료/사용 제한 초과 코드 등)에 대한 테스트 구현

### 4.2 배포 전 최종 점검
- [ ] 코드 품질 및 보안 검토
- [ ] 성능 테스트
- [ ] 사용자 경험 테스트

### 4.3 단계적 배포
- [ ] 테스트 환경 배포 및 검증
- [ ] 프로덕션 환경 단계적 배포

## 5. 주요 구현 파일 목록

### 5.1 백엔드 파일
- [ ] `/lib/supabase/crew-auth.ts` - 크루 인증 관련 유틸리티 함수
- [ ] `/app/api/crew-codes/route.ts` - 초대 코드 관리 API
- [ ] `/app/api/crew-verification/route.ts` - 크루 인증 API
- [ ] `/middleware.ts` - 인증 상태 확인 및 리다이렉트 로직 추가

### 5.2 프론트엔드 파일
- [ ] `/components/auth/CrewVerificationForm.tsx` - 크루 코드 입력 폼
- [ ] `/app/auth/verify-crew/page.tsx` - 크루 인증 페이지
- [ ] `/app/admin/crew-codes/page.tsx` - 관리자용 크루 코드 관리 페이지
- [ ] `/components/modals/UnverifiedUserModal.tsx` - 미인증 사용자 안내 모달

## 6. 구현 순서 (권장)

1. 데이터베이스 테이블 및 스키마 설정
2. 크루 코드 생성 및 검증 API 구현
3. 크루 인증 플로우 백엔드 로직 구현
4. 크루 코드 입력 UI 및 인증 플로우 프론트엔드 구현
5. 미인증 사용자 처리 로직 구현
6. 관리자 페이지 - 코드 관리 기능 구현
7. 테스트 및 디버깅
8. 단계적 배포 